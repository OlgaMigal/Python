# 11. Напишите программу, которая принимает на вход
# число N и выдаёт последовательность из N членов.
#
# Пример:
# Для N = 5: 1, -3, 9, -27, 81

# n = int(input(f'Введите число N '))
# n_list = []
# x = 1
# for i in range(n):
#     n_list.append(x)
#     x *= -3
# print(n_list)

# 12. Для натурального n создать список, состоящий из элементов последовательности 3n + 1.
# Пример:
# - Для n = 6: [1, 4, 7, 10, 13, 16, 19]
# Усложнение:
# Создать список, где указанные числа будут стоять на соответствующих индексах,
# остальные элементы сделать нулевыми, т.е. для индекса 1, значение 1,
# для индекса 4, значение 4 и т.п.
# Пример:
# - Для n = 6: [0,1,0,0,4,0,0,7,0,0,10]

# num = int(input('Ввидите N '))
# num_list = []
#
# for i in range(num + 5):
#     num_list.append(0)
#     num_list.append(i * 3 + 1)
#     num_list.append(0)
#
# print(num_list)


str_scope = "123hgfd123jgdg1234ritrpr1"
str_find = "12"
# [MAIN] Основной вариант решения:
# [Вопрос группе] Работа со строками: изобретаем или ищем клады

# 1. Ищем клады
print(f"Кол-во вхождений: {str_scope.count(str_find)}")

# 2. Изобретаем велосипеды
# [*] - Усложнение: Подумать об эффективности
# Что у нас внутри цикла
find_count = 0
for i in range(len(str_scope) - len(str_find) + 1):
    str_block = str_scope[i:i + len(str_find)]
    if str_block == str_find:
        find_count += 1
print(f"Кол-во вхождений: {find_count}")